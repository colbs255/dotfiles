# Key bindings for brightness control using `light`.
# Displays a notification with the current value if /usr/bin/notify-send is available
#
# Brightness increase/decrease step can be customized by setting the `$brightness_step`
# variable to a numeric value before including the file.
#
# Requires:     light
# Recommends:   libnotify

set $brightness_notification_cmd  command -v notify-send >/dev/null && \
        VALUE=$(light) && VALUE=${VALUE%%.*} && \
        notify-send -e -h string:x-canonical-private-synchronous:brightness \
            -h "int:value:$VALUE" -t 800 "Brightness: ${VALUE}%"

bindsym XF86MonBrightnessDown exec \
        'STEP="$brightness_step" && light -U ${STEP:-5} && $brightness_notification_cmd'
bindsym XF86MonBrightnessUp exec \
        'STEP="$brightness_step" && light -A ${STEP:-5} && $brightness_notification_cmd'

# Key bindings for media player control via MPRIS D-Bus interface
#
# Requires:     playerctl

# Allow Play and Stop bindings even if the screen is locked
bindsym --locked {
    XF86AudioPlay       exec playerctl play-pause
    XF86AudioStop       exec playerctl stop
}

bindsym {
    XF86AudioForward    exec playerctl position +10
    XF86AudioNext       exec playerctl next
    XF86AudioPause      exec playerctl pause
    XF86AudioPrev       exec playerctl previous
    XF86AudioRewind     exec playerctl position -10
}

# Key bindings for taking screenshots
#
# The image files will be written to XDG_SCREENSHOTS_DIR if this is set
# or defined in user-dirs.dir, or to a fallback location XDG_PICTURES_DIR.
#
# Copy the file to ~/.config/sway/config.d/60-bindings-screenshot.conf (or to
# your $XDG_CONFIG_HOME location if set differently) to be able to overwrite
# existing shortcuts.
# Check 'man grimshot' for additional commands that you may find useful.
#
# Requires:     grimshot

bindsym {
    # Capture the currently active output
    Print       exec grimshot save output
    # Capture the currently active window
    Alt+Print   exec grimshot save active
    # Select and capture a custom rectangular area
    Ctrl+Print  exec grimshot save area
}

# Key bindings to control pipewire or pulseaudio volume with pactl.
# Displays a notification with the current state if /usr/bin/notify-send is available
#
# Volume increase/decrease step can be customized by setting the `$volume_step`
# variable to a numeric value before including the file.
# Maximum volume boost level can be set with the `$volume_limit` variable.
#
# Requires:     pulseaudio-utils
# Recommends:   libnotify

set $volume_helper_cmd /usr/libexec/sway/volume-helper

# Allow volume controls even if the screen is locked
bindsym --locked {
    XF86AudioRaiseVolume exec \
        $volume_helper_cmd --limit "$volume_limit" --increase "$volume_step"
    XF86AudioLowerVolume exec \
        $volume_helper_cmd --limit "$volume_limit" --decrease "$volume_step"
    XF86AudioMute    exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume_helper_cmd
    XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
}
